question,answer,explain
1,9703,"== Physical Plan ==
*(2) HashAggregate(keys=[interpro_annot_accession#57], functions=[])
+- Exchange hashpartitioning(interpro_annot_accession#57, 200), ENSURE_REQUIREMENTS, [id=#40]
   +- *(1) HashAggregate(keys=[interpro_annot_accession#57], functions=[])
      +- *(1) Project [_c11#27 AS interpro_annot_accession#57]
         +- *(1) Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
            +- FileScan csv [_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>

"
2,5.775124333258208,"== Physical Plan ==
*(3) HashAggregate(keys=[], functions=[avg(count(interpro_annot_accession)#118L)])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#122]
   +- *(2) HashAggregate(keys=[], functions=[partial_avg(count(interpro_annot_accession)#118L)])
      +- *(2) HashAggregate(keys=[protein_accession#46], functions=[count(interpro_annot_accession#57)])
         +- Exchange hashpartitioning(protein_accession#46, 200), ENSURE_REQUIREMENTS, [id=#117]
            +- *(1) HashAggregate(keys=[protein_accession#46], functions=[partial_count(interpro_annot_accession#57)])
               +- *(1) Project [_c0#16 AS protein_accession#46, _c11#27 AS interpro_annot_accession#57]
                  +- *(1) Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
                     +- FileScan csv [_c0#16,_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c11:string>

"
3,GO:0005524,"== Physical Plan ==
*(6) Sort [count#140L DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(count#140L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#189]
   +- *(5) HashAggregate(keys=[GO#59], functions=[count(1)])
      +- Exchange hashpartitioning(GO#59, 200), ENSURE_REQUIREMENTS, [id=#185]
         +- *(4) HashAggregate(keys=[GO#59], functions=[partial_count(1)])
            +- Union
               :- *(1) Project [_c13#29 AS GO#59]
               :  +- *(1) Filter ((((isnotnull(_c11#27) AND isnotnull(_c13#29)) AND NOT (_c11#27 = -)) AND NOT (_c13#29 = -)) AND NOT Contains(_c13#29, |))
               :     +- FileScan csv [_c11#27,_c13#29] Batched: false, DataFilters: [isnotnull(_c11#27), isnotnull(_c13#29), NOT (_c11#27 = -), NOT (_c13#29 = -), NOT Contains(_c13#..., Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c13), Not(EqualTo(_c11,-)), Not(EqualTo(_c13,-)), Not(StringContains..., ReadSchema: struct<_c11:string,_c13:string>
               +- *(3) Filter (isnotnull(col#135) AND NOT (col#135 = -))
                  +- Generate explode(split(GO#59, \|, -1)), false, [col#135]
                     +- *(2) Project [_c13#29 AS GO#59]
                        +- *(2) Filter ((((isnotnull(_c11#27) AND NOT (_c11#27 = -)) AND isnotnull(_c13#29)) AND (size(split(_c13#29, \|, -1), true) > 0)) AND isnotnull(split(_c13#29, \|, -1)))
                           +- FileScan csv [_c11#27,_c13#29] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -), isnotnull(_c13#29), (size(split(_c13#29, \|, -1), true) >..., Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-)), IsNotNull(_c13)], ReadSchema: struct<_c11:string,_c13:string>

"
4,184.32910682354284,"== Physical Plan ==
*(3) HashAggregate(keys=[], functions=[avg(avg(length_feature)#166)])
+- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#324]
   +- *(2) HashAggregate(keys=[], functions=[partial_avg(avg(length_feature)#166)])
      +- *(2) HashAggregate(keys=[interpro_annot_accession#57], functions=[avg(cast(length_feature#76 as bigint))])
         +- Exchange hashpartitioning(interpro_annot_accession#57, 200), ENSURE_REQUIREMENTS, [id=#319]
            +- *(1) HashAggregate(keys=[interpro_annot_accession#57], functions=[partial_avg(cast(length_feature#76 as bigint))])
               +- *(1) Project [_c11#27 AS interpro_annot_accession#57, (_c7#23 - _c6#22) AS length_feature#76]
                  +- *(1) Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
                     +- FileScan csv [_c6#22,_c7#23,_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c6:int,_c7:int,_c11:string>

"
5,"['IPR027417', 'IPR002347', 'IPR003439', 'IPR036388', 'IPR036259', 'IPR003593', 'IPR036390', 'IPR036291', 'IPR000515', 'IPR001789']","== Physical Plan ==
*(3) Sort [count#202L DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(count#202L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#360]
   +- *(2) HashAggregate(keys=[interpro_annot_accession#57], functions=[count(1)])
      +- Exchange hashpartitioning(interpro_annot_accession#57, 200), ENSURE_REQUIREMENTS, [id=#356]
         +- *(1) HashAggregate(keys=[interpro_annot_accession#57], functions=[partial_count(1)])
            +- *(1) Project [_c11#27 AS interpro_annot_accession#57]
               +- *(1) Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
                  +- FileScan csv [_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>

"
6,"['IPR027417', 'IPR036259', 'IPR020846', 'IPR029058', 'IPR036388', 'IPR000182', 'IPR013785', 'IPR036291', 'IPR029063', 'IPR015424']","== Physical Plan ==
*(3) Sort [count#211L DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(count#211L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#443]
   +- *(2) HashAggregate(keys=[interpro_annot_accession#57], functions=[count(1)])
      +- Exchange hashpartitioning(interpro_annot_accession#57, 200), ENSURE_REQUIREMENTS, [id=#439]
         +- *(1) HashAggregate(keys=[interpro_annot_accession#57], functions=[partial_count(1)])
            +- *(1) Project [_c11#27 AS interpro_annot_accession#57]
               +- *(1) Filter (((((isnotnull(_c11#27) AND isnotnull(_c7#23)) AND isnotnull(_c6#22)) AND isnotnull(_c2#18)) AND NOT (_c11#27 = -)) AND (cast((_c7#23 - _c6#22) as double) > ((cast(_c2#18 as double) / 100.0) * 90.0)))
                  +- FileScan csv [_c2#18,_c6#22,_c7#23,_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), isnotnull(_c7#23), isnotnull(_c6#22), isnotnull(_c2#18), NOT (_c11#27 = -), ..., Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), Not(EqualTo(_c11,-))], ReadSchema: struct<_c2:int,_c6:int,_c7:int,_c11:string>

"
7,"['domain', 'like', 'superfamily', 'protein', 'binding', 'terminal', 'type', 'C', 'DNA', 'hydrolase']","== Physical Plan ==
*(4) Sort [count#224L DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(count#224L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#538]
   +- *(3) HashAggregate(keys=[col#220], functions=[count(1)])
      +- Exchange hashpartitioning(col#220, 200), ENSURE_REQUIREMENTS, [id=#534]
         +- *(2) HashAggregate(keys=[col#220], functions=[partial_count(1)])
            +- *(2) Filter (isnotnull(col#220) AND NOT (col#220 = ))
               +- Generate explode(split(interpro_annot_description#58, \s+|,|-|\/, -1)), false, [col#220]
                  +- *(1) Project [_c12#28 AS interpro_annot_description#58]
                     +- *(1) Filter ((((isnotnull(_c11#27) AND NOT (_c11#27 = -)) AND isnotnull(_c12#28)) AND (size(split(_c12#28, \s+|,|-|\/, -1), true) > 0)) AND isnotnull(split(_c12#28, \s+|,|-|\/, -1)))
                        +- FileScan csv [_c11#27,_c12#28] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -), isnotnull(_c12#28), (size(split(_c12#28, \s+|,|-|\/, -1),..., Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-)), IsNotNull(_c12)], ReadSchema: struct<_c11:string,_c12:string>

"
8,"['RE', 'Gp224', 'DUF5049', 'PRD1', 'SerK', '49kDa', 'DUF993', 'GpE', 'DUF2839', 'RecB']","== Physical Plan ==
*(4) Sort [count#235L ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(count#235L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#651]
   +- *(3) HashAggregate(keys=[col#231], functions=[count(1)])
      +- Exchange hashpartitioning(col#231, 200), ENSURE_REQUIREMENTS, [id=#647]
         +- *(2) HashAggregate(keys=[col#231], functions=[partial_count(1)])
            +- *(2) Filter (isnotnull(col#231) AND NOT (col#231 = ))
               +- Generate explode(split(interpro_annot_description#58, \s+|,|-|\/, -1)), false, [col#231]
                  +- *(1) Project [_c12#28 AS interpro_annot_description#58]
                     +- *(1) Filter ((((isnotnull(_c11#27) AND NOT (_c11#27 = -)) AND isnotnull(_c12#28)) AND (size(split(_c12#28, \s+|,|-|\/, -1), true) > 0)) AND isnotnull(split(_c12#28, \s+|,|-|\/, -1)))
                        +- FileScan csv [_c11#27,_c12#28] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -), isnotnull(_c12#28), (size(split(_c12#28, \s+|,|-|\/, -1),..., Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-)), IsNotNull(_c12)], ReadSchema: struct<_c11:string,_c12:string>

"
9,"['protein', 'like', 'superfamily', 'domain', 'binding', 'type', 'subunit', 'synthase', 'transporter', 'hydrolase']","== Physical Plan ==
*(4) Sort [count#246L DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(count#246L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#764]
   +- *(3) HashAggregate(keys=[col#242], functions=[count(1)])
      +- Exchange hashpartitioning(col#242, 200), ENSURE_REQUIREMENTS, [id=#760]
         +- *(2) HashAggregate(keys=[col#242], functions=[partial_count(1)])
            +- *(2) Filter (isnotnull(col#242) AND NOT (col#242 = ))
               +- Generate explode(split(interpro_annot_description#58, \s+|,|-|\/, -1)), false, [col#242]
                  +- *(1) Project [_c12#28 AS interpro_annot_description#58]
                     +- *(1) Filter ((((((((isnotnull(_c11#27) AND isnotnull(_c7#23)) AND isnotnull(_c6#22)) AND isnotnull(_c2#18)) AND NOT (_c11#27 = -)) AND (cast((_c7#23 - _c6#22) as double) > ((cast(_c2#18 as double) / 100.0) * 90.0))) AND isnotnull(_c12#28)) AND (size(split(_c12#28, \s+|,|-|\/, -1), true) > 0)) AND isnotnull(split(_c12#28, \s+|,|-|\/, -1)))
                        +- FileScan csv [_c2#18,_c6#22,_c7#23,_c11#27,_c12#28] Batched: false, DataFilters: [isnotnull(_c11#27), isnotnull(_c7#23), isnotnull(_c6#22), isnotnull(_c2#18), NOT (_c11#27 = -), ..., Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), Not(EqualTo(_c11,-)), IsNotNull..., ReadSchema: struct<_c2:int,_c6:int,_c7:int,_c11:string,_c12:string>

"
10,0.5653432058112811,"== Physical Plan ==
*(2) HashAggregate(keys=[protein_accession#46], functions=[avg(cast(sequence_length#48 as bigint)), count(interpro_annot_accession#57)])
+- Exchange hashpartitioning(protein_accession#46, 200), ENSURE_REQUIREMENTS, [id=#854]
   +- *(1) HashAggregate(keys=[protein_accession#46], functions=[partial_avg(cast(sequence_length#48 as bigint)), partial_count(interpro_annot_accession#57)])
      +- *(1) Project [_c0#16 AS protein_accession#46, _c2#18 AS sequence_length#48, _c11#27 AS interpro_annot_accession#57]
         +- *(1) Filter (isnotnull(_c11#27) AND NOT (_c11#27 = -))
            +- FileScan csv [_c0#16,_c2#18,_c11#27] Batched: false, DataFilters: [isnotnull(_c11#27), NOT (_c11#27 = -)], Format: CSV, Location: InMemoryFileIndex[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c2:int,_c11:string>

"
